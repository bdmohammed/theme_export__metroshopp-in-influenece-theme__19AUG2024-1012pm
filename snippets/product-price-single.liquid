{% comment %}
  Renders a list of product's price (regular, sale, unit)
  Accompanies product forms and meant to be updated dynamically

  Accepts:
  - variant: {Object} Variant Liquid object (optional)
  - product: {Object} Product Liquid object (optional)
  - PR_no_pick: {Boolean} Product no pick (optional)
  - type_sale: '1' for percentage discount, '2' for fixed amount discount (optional)

  Usage:
  {%- render 'product-price-single', variant: current_variant, product: product, PR_no_pick:true -%}
{% endcomment %}

{%- liquid
  # Determine prices based on available objects
  if variant.title
    assign price = variant.price
    assign compare_at_price = variant.compare_at_price | default: price
    # assign available = variant.available
  elsif PR_no_pick
    assign price = product.price
    assign compare_at_price = product.compare_at_price | default: price
    # assign available = product.available
  else
    # Determine prices based on available objects
    assign price = 1999
    assign compare_at_price = 1999
    # assign available = true
  endif

  # Determine if product is on sale
  assign on_sale = compare_at_price > price

  # Get user preferences from theme settings
  assign cur_code_enabled = settings.currency_code_enabled
  assign price_varies_style = settings.price_varies_style

  # Calculate discount amount
  assign save_amount_fixed = compare_at_price | minus: price
  assign save_percentage = save_amount_fixed | times: 100.0 | divided_by: compare_at_price | round

  # Format prices according to settings
  if cur_code_enabled
    assign money_price = price | money_with_currency
    assign money_compare_at_price = compare_at_price | money_with_currency
    assign price_format_money = save_amount_fixed | money_with_currency
  else
    assign money_price = price | money
    assign money_compare_at_price = compare_at_price | money
    assign price_format_money = save_amount_fixed | money
  endif

  # Capture unit price measurement from variant
  assign variant_unit_price_measurement = variant.unit_price_measurement
-%}

{%- capture sale_badge_html -%}
  {%- if on_sale -%}
    {%- if type_sale == '1' -%}
      <span class="badge-price">{{ 'products.badge.save_amount_2_html' | t: saved_amount: save_percentage }}</span>
    {%- elsif type_sale == '2' %}
      <span class="badge-price">
        {{- 'products.badge.save_amount_fixed_2_html' | t: saved_amount: price_format_money -}}
      </span>
    {%- endif -%}
  {%- endif -%}
{%- endcapture -%}

<div
  class="product-price"
  {%- if variant_unit_price_measurement == null -%}
    data-pr-price data-product-price data-saletype="{{type_sale}}"
  {% else %}
    data-product-unit-price
  {% endif %}
>
  {%- if variant_unit_price_measurement -%}
    <span data-pr-price data-product-price data-saletype="{{type_sale}}">
      {%- if on_sale -%}
        <del aria-hidden="true">{{ money_compare_at_price }}</del>
        <ins>{{ money_price }}</ins>
        <span class="visually-hidden">{{ 'products.product.sale_price' | t }}: {{ money_price }}</span>
        {{ sale_badge_html }}
      {%- else -%}
        {{ money_price }}
      {%- endif -%}
    </span>

    {%- liquid
      if cur_code_enabled
        assign price_unit = variant.unit_price | money_with_currency
      else
        assign price_unit = variant.unit_price | money
      endif
    -%}
    {%- capture unit_price_base_unit -%}
      <span data-unit-base class="unit_base">
        {%- if variant_unit_price_measurement -%}
          {%- if variant_unit_price_measurement.reference_value != 1 -%}
            {{- variant_unit_price_measurement.reference_value -}}
          {%- endif -%}
          {{ variant_unit_price_measurement.reference_unit }}
        {%- endif -%}
      </span>
    {%- endcapture -%}
    <div class="price__unit" aria-label="{{ 'products.product.unit_price_label' | t }}">
      <span data-unit-price class="unit_price">{{ price_unit }}</span><span aria-hidden="true">/</span>
      {{- unit_price_base_unit -}}
    </div>

  {%- elsif product.price_varies and PR_no_pick -%}
    {%- liquid
      if cur_code_enabled
        assign price_min = product.price_min | money_with_currency
        assign price_max = product.price_max | money_with_currency
      else
        assign price_min = product.price_min | money
        assign price_max = product.price_max | money
      endif
    -%}

    {%- if price_varies_style == '1' -%}
      <span class="price-range">
        <span class="price-min">{{ price_min }}</span>
        <span class="price-separator" aria-hidden="true">â€“</span>
        <span class="price-max">{{ price_max }}</span>
      </span>
    {%- else -%}
      <span class="price-from">
        {{ 'products.product.from_price_html' | t: price_min: price_min, class: 'price-from' }}
      </span>
    {%- endif -%}

  {%- elsif on_sale -%}
    <del aria-hidden="true">{{ money_compare_at_price }}</del>
    <ins>{{ money_price }}</ins>
    <span class="visually-hidden">{{ 'products.product.sale_price' | t }}: {{ money_price }}</span>
    {{ sale_badge_html }}
  {%- else -%}
    {{ money_price }}
  {%- endif -%}
</div>
